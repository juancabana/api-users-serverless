service: serverless-api-users
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
        - "sns:*"
      Resource: "*"

functions:
  api:
    handler: src/index.handler
    events:
      - httpApi:
          path: /
          method: get
  createUser:
    handler: src/createUser.createUser
    environment:
      USERS_TABLE: ${ssm:/players-table/name}
    events:
      - httpApi:
          path: /users
          method: post
  getUsers:
    handler: src/getUsers.getUsers
    environment:
      USERS_TABLE: ${ssm:/players-table/name}
    events:
      - httpApi:
          path: /users
          method: get
  deleteUser:
    handler: src/deleteUser.deleteUser
    environment:
      USERS_TABLE: ${ssm:/players-table/name}
    events:
      - httpApi:
          path: /users/{id}
          method: delete
  putPlayer:
    handler: src/putPlayer.putPlayer
    environment:
      USERS_TABLE: ${ssm:/players-table/name}
    events:
      - httpApi:
          path: /users/{id}
          method: put
  sendEmail:
    handler: src/sendMail.sendMail
    environment:
      SNS_TOPIC_ARN: arn:aws:sns:us-east-1:339712931009:mySNSTopic
    events:
      - http:
          path: /send-email
          method: post
          authorizer: 
            type: COGNITO_USER_POOLS
            authorizerId: { Ref: MyCognitoAuthorizer }
          cors: true
	
resources: # CloudFormation template syntax
  Resources:
    ApiGatewayHttpApi:
      Type: AWS::ApiGatewayV2::Api
      Properties:
        Name: MyHttpApi
        ProtocolType: HTTP
    usersTable: 
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${ssm:/players-table/name}
        AttributeDefinitions:
          - AttributeName: 'id'
            AttributeType: 'S'
        KeySchema:
          - AttributeName: 'id'
            KeyType: 'HASH'
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    mySNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: mySNSTopic
    MyCognitoAuthorizer:
      Type: AWS::ApiGateway::Authorizer
      Properties:
        RestApiId:
          Ref: ApiGatewayHttpApi
        Name: nt0kor
        Type: COGNITO_USER_POOLS
        IdentitySource: method.request.header.Authorization
        ProviderARNs:
          - arn:aws:cognito-idp:us-east-1:339712931009:userpool/us-east-1_5PD481bS5